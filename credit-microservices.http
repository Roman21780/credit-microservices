### 1. Проверка здоровья сервисов
GET http://localhost:8080/actuator/health
GET http://localhost:8081/actuator/health

### 2. Создание заявки на кредит (credit-application-service)
POST http://localhost:8080/api/credit-applications
Content-Type: application/json

{
  "amount": 100000,
  "term": 12,
  "income": 50000,
  "currentDebt": 20000,
  "creditRating": 700
}

### 3. Получение статуса заявки (подставить реальный ID из шага 2)
@applicationId = {{credit-application.response.body.id}}
GET http://localhost:8080/api/credit-applications/{{applicationId}}/status

### 4. Тест обработки заявки (credit-processing-service)
POST http://localhost:8081/api/test/process
Content-Type: application/json

{
  "applicationId": "{{applicationId}}",
  "amount": 100000,
  "term": 12,
  "income": 50000,
  "currentDebt": 20000,
  "creditRating": 700
}

### 5. Проверка логов Kafka (требует админ-доступа)
GET http://localhost:8080/api/admin/kafka-status
GET http://localhost:8081/api/admin/kafka-status

### 6. Проверка RabbitMQ (требует админ-доступа)
GET http://localhost:8080/api/admin/rabbitmq-status
GET http://localhost:8081/api/admin/rabbitmq-status

### 7. Примеры разных сценариев кредитных заявок

#### Одобренная заявка (платеж <50% дохода)
POST http://localhost:8080/api/credit-applications
Content-Type: application/json

{
  "amount": 50000,
  "term": 12,
  "income": 30000,
  "currentDebt": 5000,
  "creditRating": 750
}

#### Отклоненная заявка (платеж >50% дохода)
POST http://localhost:8080/api/credit-applications
Content-Type: application/json

{
  "amount": 200000,
  "term": 12,
  "income": 30000,
  "currentDebt": 5000,
  "creditRating": 650
}

#### Пограничный случай
POST http://localhost:8080/api/credit-applications
Content-Type: application/json

{
  "amount": 150000,
  "term": 36,
  "income": 60000,
  "currentDebt": 10000,
  "creditRating": 720
}