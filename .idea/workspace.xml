<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="949d09d9-7e6e-4efa-a252-d5bc0b446972" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/checksums/checksums.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/checksums/checksums.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/checksums/md5-checksums.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/checksums/sha1-checksums.bin" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/executionHistory/executionHistory.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/executionHistory/executionHistory.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/fileHashes/fileHashes.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/fileHashes/fileHashes.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/8.13/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/8.13/fileHashes/resourceHashesCache.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/cache.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/outputFiles.bin" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gradle/file-system.probe" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/gradle.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/httpRequests/http-requests-log.http" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules/credit-common/credit-microservices.credit-common.main.iml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/build/reports/problems/problems-report.html" beforeDir="false" afterPath="$PROJECT_DIR$/build/reports/problems/problems-report.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/credit-application-service/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/credit-application-service/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/credit-application-service/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/credit-common/build/libs/credit-common.jar" beforeDir="false" afterPath="$PROJECT_DIR$/credit-common/build/libs/credit-common.jar" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/credit-processing-service/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/credit-processing-service/build.gradle" beforeDir="false" afterPath="$PROJECT_DIR$/credit-processing-service/build.gradle" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/credit-application-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/credit-processing-service">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/credit-application-service">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/credit-processing-service">
          <activation />
        </task>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <task path="$PROJECT_DIR$/credit-common">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="credit-microservices" type="f1a62948:ProjectNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="credit-microservices" type="f1a62948:ProjectNode" />
                <item name="credit-application-service" type="2d1252cf:ModuleNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="credit-microservices" type="f1a62948:ProjectNode" />
                <item name="credit-application-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
              </path>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="credit-microservices" type="f1a62948:ProjectNode" />
                <item name="credit-application-service" type="2d1252cf:ModuleNode" />
                <item name="Tasks" type="e4a08cd1:TasksNode" />
                <item name="build" type="c8890929:TasksNode$1" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTTP Request" />
        <option value="AnnotationType" />
        <option value="Class" />
        <option value="Enum" />
        <option value="Dockerfile" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 2
}</component>
  <component name="ProjectId" id="31HdciJKGE7Qqq5krpqb4pA9LXX" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Gradle.Download Sources.executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-microservices [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-microservices [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-microservices:credit-application-service [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-microservices:credit-common [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-microservices:credit-common [clean].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-processing-service [build].executor&quot;: &quot;Run&quot;,
    &quot;Gradle.credit-processing-service [clean].executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 1. Проверка здоровья сервисов.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 2. Проверка здоровья сервисов.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 2. Создание заявки на кредит (credit-application-service).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 3. Создание заявки на кредит (credit-application-service).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 4. Получение статуса заявки (подставить реальный ID из шага 2).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 4. Получение статуса заявки.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 5. Тест обработки заявки (credit-processing-service).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 6. Примеры разных сценариев кредитных заявок.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 6. Проверка логов Kafka (требует админ-доступа).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 7. Проверка RabbitMQ (требует админ-доступа).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | 8. Примеры разных сценариев кредитных заявок.executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | Отклоненная заявка (платеж &gt;50% дохода).executor&quot;: &quot;Run&quot;,
    &quot;HTTP Request.credit-microservices | Пограничный случай.executor&quot;: &quot;Run&quot;,
    &quot;ModuleVcsDetector.initialDetectionPerformed&quot;: &quot;true&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;SHELLCHECK.PATH&quot;: &quot;C:\\Users\\Roman\\AppData\\Roaming\\JetBrains\\IntelliJIdea2025.1\\plugins\\Shell Script\\shellcheck.exe&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;ignore.virus.scanning.warn.message&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Java/Project1/WEB/credit-microservices&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.creditapplicationservice" />
    </key>
  </component>
  <component name="RunManager" selected="HTTP Request.credit-microservices | 2. Проверка здоровья сервисов">
    <configuration name="credit-microservices | 1. Проверка здоровья сервисов" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/credit-microservices.http" executionIdentifier="1. Проверка здоровья сервисов" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="credit-microservices | 2. Проверка здоровья сервисов" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/credit-microservices.http" executionIdentifier="2. Проверка здоровья сервисов" index="2" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="credit-microservices | 3. Создание заявки на кредит (credit-application-service)" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/credit-microservices.http" executionIdentifier="3. Создание заявки на кредит (credit-application-service)" index="3" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="credit-microservices | 4. Получение статуса заявки" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/credit-microservices.http" executionIdentifier="4. Получение статуса заявки" index="4" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="credit-microservices | 5. Тест обработки заявки (credit-processing-service)" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/credit-microservices.http" executionIdentifier="5. Тест обработки заявки (credit-processing-service)" index="5" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="CreditApplicationServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="credit-application-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.creditapplicationservice.CreditApplicationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CreditApplicationServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="credit-microservices.credit-application-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.creditapplicationservice.CreditApplicationServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CreditProcessingServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="credit-microservices.credit-processing-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.creditprocessingservice.CreditProcessingServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="CreditProcessingServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="credit-microservices.credit-processing-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.creditprocessingservice.CreditProcessingServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="HTTP Request.credit-microservices | 2. Проверка здоровья сервисов" />
        <item itemvalue="HTTP Request.credit-microservices | 5. Тест обработки заявки (credit-processing-service)" />
        <item itemvalue="HTTP Request.credit-microservices | 4. Получение статуса заявки" />
        <item itemvalue="HTTP Request.credit-microservices | 3. Создание заявки на кредит (credit-application-service)" />
        <item itemvalue="HTTP Request.credit-microservices | 1. Проверка здоровья сервисов" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9823dce3aa75-fbdcb00ec9e3-intellij.indexing.shared.core-IU-251.25410.129" />
        <option value="bundled-js-predefined-d6986cc7102b-6a121458b545-JavaScript-IU-251.25410.129" />
      </set>
    </attachedChunks>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="949d09d9-7e6e-4efa-a252-d5bc0b446972" name="Changes" comment="" />
      <created>1755185013081</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1755185013081</updated>
      <workItem from="1755185014164" duration="10201000" />
      <workItem from="1755195284868" duration="6122000" />
      <workItem from="1755202637526" duration="2388000" />
      <workItem from="1755320614350" duration="10780000" />
      <workItem from="1755332560905" duration="10383000" />
      <workItem from="1755343485595" duration="12565000" />
      <workItem from="1755365240125" duration="3781000" />
      <workItem from="1755405966536" duration="25004000" />
      <workItem from="1755445883920" duration="9022000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>